buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

dependencies {
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:gridlayout-v7:22.0.0'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.google.android.gms:play-services-maps:6.5.87'
    compile files('src/main/java/libs/gson-2.2.3.jar')
    compile files('src/main/java/libs/json_simple-1.1.jar')
    compile files('src/main/java/libs/mimepull-1.4.jar')
    compile files('src/main/java/libs/jersey-bundle-1.8.jar')
    compile files('src/main/java/libs/jersey-multipart.jar')
    compile files('src/main/java/libs/grizzly-servlet-webserver-1.9.45.jar')
    compile files('src/main/java/libs/jackson-jaxrs-1.9.2.jar')
    compile files('src/main/java/libs/jsr311-api-1.1.1.jar')
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}















